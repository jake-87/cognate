Let Foo be List (1 2 3);

Print If (Foo; == Foo)
	'PASS: Comparing equal lists'
else
	'FAIL: Comparing equal lists';

Print If (Foo; /= List (5 6 7))
	'PASS: Comparing unequal lists'
else
	'FAIL: Comparing unequal lists';

Print If (List (); == List ())
	'PASS: Comparing two empty lists'
else
	'FAIL: Comparing two empty lists';

Print If (List (); /= Foo)
	'PASS: An empty list to a non-empty list'
else
	'FAIL: An empty list to a non-empty list';

Print If (Push 42 to Foo; == List (42 1 2 3))
	'PASS: Pushing object to list'
else
	'FAIL: Pushing object to list';

Print If (First element in Foo; == 1)
	'PASS: Getting First element in list'
else
	'FAIL: Getting First element in list';

Print If (First element in List (1); == 1)
	'PASS: Getting First element in single-element list'
else
	'FAIL: Getting First element in single-element list';

Print If (Rest of Foo; == List (2 3))
	'PASS: Getting Rest of list'
else
	'FAIL: Getting Rest of list';

Print If (Rest of List (1); == List ())
	'PASS: Getting Rest of single-element list'
else
	'FAIL: Getting Rest of single-element list';

Print If (Index 3 of List (1 2 3 4 5); == 4)
	'PASS: Getting index of list'
	'FAIL: Getting index of list';
