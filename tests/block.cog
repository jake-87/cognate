Def Baz as (
	Let Z;
	(Do Z);
);


Def Bar as (
	Let Y;
	Baz (Do Y);
);

Def Foo as (
	Let X;
	Set X to X;
	Bar (Print X);
);


Foo 'PASS: Implicit block copying';
Foo 'FAIL: Implicit block copying';
Drop; Do;


Let Y be ();

Def Foo2 as (
	Let X;
	Set Y to (Print X);
);


Foo2 'PASS: Implicit block copying with mutation'; Let Z be Y;
Foo2 'FAIL: Implicit block copying with mutation'; Let W be Y;
Do Z;
Drop W;

Def A as (
	Let B;
	Let Foo as (Print B);
	return (Do Foo);
);

Do A 'PASS: Another block copying test';

Def B as (
	Let B;
	Def Foo as (Print B);
	return (Foo);
);

Do B 'PASS: Another block copying test again';
